{"ast":null,"code":"var _jsxFileName = \"/Users/Stephen/Desktop/Projects/Dinner/untitled/src/components/timer.jsx\";\nimport React, { Component } from 'react';\nimport timer from '../App.css';\n\nclass Timer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hours: 79,\n      minutes: 0,\n      seconds: 4\n    };\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const _this$state = this.state,\n            hours = _this$state.hours,\n            minutes = _this$state.minutes,\n            seconds = _this$state.seconds;\n\n      if (seconds > 0) {\n        this.setState(({\n          seconds\n        }) => ({\n          seconds: seconds - 1\n        }));\n      }\n\n      if (seconds === 0) {\n        if (minutes === 0) {\n          if (hours === 0) {\n            clearInterval(this.myInterval);\n          } else {\n            this.setState(({\n              hours\n            }) => ({\n              hours: hours - 1,\n              seconds: 59,\n              minutes: 59\n            }));\n          }\n        } else {\n          this.setState(({\n            minutes\n          }) => ({\n            minutes: minutes - 1,\n            seconds: 59\n          }));\n        }\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          hours = _this$state2.hours,\n          minutes = _this$state2.minutes,\n          seconds = _this$state2.seconds;\n    return React.createElement(\"div\", {\n      id: timer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Time Remaining: \", hours, \" : \", minutes, \" : \", seconds, \" \"));\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/Stephen/Desktop/Projects/Dinner/untitled/src/components/timer.jsx"],"names":["React","Component","timer","Timer","state","hours","minutes","seconds","componentDidMount","myInterval","setInterval","setState","clearInterval","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE,CAFL;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADkB;AAAA;;AAO1BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAAA,0BACI,KAAKN,KADT;AAAA,YACxBC,KADwB,eACxBA,KADwB;AAAA,YACjBC,OADiB,eACjBA,OADiB;AAAA,YACRC,OADQ,eACRA,OADQ;;AAGhC,UAAGA,OAAO,GAAG,CAAb,EAAiB;AACb,aAAKI,QAAL,CAAc,CAAE;AAAEJ,UAAAA;AAAF,SAAF,MAAmB;AAC7BA,UAAAA,OAAO,EAAEA,OAAO,GAAG;AADU,SAAnB,CAAd;AAGH;;AAED,UAAGA,OAAO,KAAK,CAAf,EAAmB;AACf,YAAGD,OAAO,KAAK,CAAf,EAAmB;AACf,cAAGD,KAAK,KAAK,CAAb,EAAgB;AACZO,YAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACH,WAFD,MAEO;AACH,iBAAKE,QAAL,CAAe,CAAC;AAAEN,cAAAA;AAAF,aAAD,MAAgB;AAC3BA,cAAAA,KAAK,EAAEA,KAAK,GAAG,CADY;AAE3BE,cAAAA,OAAO,EAAE,EAFkB;AAG3BD,cAAAA,OAAO,EAAE;AAHkB,aAAhB,CAAf;AAKH;AACJ,SAVD,MAUO;AACH,eAAKK,QAAL,CAAe,CAAC;AAAEL,YAAAA;AAAF,WAAD,MAAkB;AAC7BA,YAAAA,OAAO,EAAEA,OAAO,GAAG,CADU;AAE7BC,YAAAA,OAAO,EAAE;AAFoB,WAAlB,CAAf;AAIH;AACJ;AACJ,KA3B4B,EA2B1B,IA3B0B,CAA7B;AA4BH;;AAEDM,EAAAA,oBAAoB,GAAG;AACnBD,IAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACH;;AAEDK,EAAAA,MAAM,GAAG;AAAA,yBAC+B,KAAKV,KADpC;AAAA,UACGC,KADH,gBACGA,KADH;AAAA,UACUC,OADV,gBACUA,OADV;AAAA,UACmBC,OADnB,gBACmBA,OADnB;AAEL,WACI;AAAK,MAAA,EAAE,EAAEL,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBG,KAAtB,SAAkCC,OAAlC,SAAgDC,OAAhD,MADJ,CADJ;AAKH;;AAjDyB;;AAoD9B,eAAeJ,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport timer from '../App.css';\n\nclass Timer extends Component {\n    state = {\n        hours: 79,\n        minutes: 0,\n        seconds: 4\n    }\n\n    componentDidMount() {\n        this.myInterval = setInterval(() => {\n            const { hours, minutes, seconds } = this.state\n\n            if(seconds > 0 ) {\n                this.setState(( { seconds }) => ({\n                    seconds: seconds - 1\n                }))\n            }\n\n            if(seconds === 0 ) {\n                if(minutes === 0 ) {\n                    if(hours === 0) {\n                        clearInterval(this.myInterval)\n                    } else {\n                        this.setState( ({ hours }) => ({\n                            hours: hours - 1,\n                            seconds: 59,\n                            minutes: 59\n                        }))\n                    }\n                } else {\n                    this.setState( ({ minutes }) => ({\n                        minutes: minutes - 1,\n                        seconds: 59\n                    }))\n                }\n            }\n        }, 1000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.myInterval)\n    }\n\n    render() {\n        const { hours, minutes, seconds } = this.state\n        return (\n            <div id={timer}>\n                <h1>Time Remaining: { hours } : { minutes } : { seconds } </h1>\n            </div>\n        )\n    }\n}\n\nexport default Timer;\n\n"]},"metadata":{},"sourceType":"module"}